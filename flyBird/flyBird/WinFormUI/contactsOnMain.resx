<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="connectBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABF9JREFUaEPt
        mluoVVUUho8FmpcIfdAsLTVTMSotfQgEfYgiEBV7CAQTBUFFNEVDezOQHoTeAlHwpcBLZKAY6oOJ6IsP
        agheUA9aYoLZRYPMLqv/H+PfcfTsNffce41lEH7w455jzfmPuc5elznmtush/zeKohgMLYB2Q6eh76Ef
        oZvQEWgNNEDdDbRfgD6CjkPfQo3+h6AlUD91rR8k6wu9D/0MteIsNE5DOfZ56BQPlHAMeh16REPqAQn6
        QfugdjkJTZPHUOgKgwn4jT1jSesA5p9Zms64C82Sz1sWScPLNf5Sg+kMs68G74kn5HfCImmWWfJIYPq5
        e1dmtfzWeTPJYUseBQwfhXJu7hwOyfM1bya5YROIAoZj3DeEm/Ic4s0kf0N9bRIRwGyq2cbBR3gf6A9r
        pRmiaVQHZq+4ZxiD5PubN0v5E4p7p8DsZbON4Y48H/Nmkus2gShgONJ9Q/hOnsO9meSgTSASmPIdEMFR
        +U3xZpJNljwSmH7t3pX5WH4LvZnkuCWPBKbb3Lsyi+XHhWcrblvyKGA4EPrJrKvzlTxf9WaSbptAFDB8
        yX1DuCLPp7yZ5BObQBQwHOa+IZyR53PeLOUi9KRNIBKYXjD76myR31xvljLdEkcD48XuXwm+yV+UX6q2
        uQrVVyXCfKOl6Zw35MOSN7U82WAJ6wIJnvU8HXFZHoOgbyzSnPOQrcVqBUm449EJH2r8Im+WstES1Q0S
        5dTb98PL6GmNP2iRch7MiRAk2+k5s1mncVxF/2WRcu5AZ6D90FIo/hHcAObtvCBtmYF/WS5z36pduPuy
        GbJvNBSYjmKGTK5pTM/SliUs4V//U4jvFJbT3L2k+PltiI9o9iG3oTk2gShgONms8/gd4rdB8a/bgLsy
        o2RZCvqMhr7gAMDLcqUOVQdmy8w2Hy4QZ0OcCOv0FbLKBmNWQSx96TFT4c6BCfdmf4Hage+GX/1jsUpW
        bYOxa93CtqaGK9weGDgJ4jXb6qmTYrfsmqI+hZq9wCHuvOy1TkWxVeHWoDMHvgm1evbnwHtljKyb4t3K
        T4TgMJc3vNd4mY1UuDnoMADifXAOimK77EtRv+SJEHTZ5T2L5Qr1BgfnQ1x9RvOOUpSifjknMs97erV5
        DwiynOWvT3UxVqlKUb+cExnvPYtzCjkIcLOs08VgLvesaBXLRsMMNB/3aHFLIQeBTR6vlYFKZyiWjYYZ
        aPY+ETRYO1d5pOby72+JZahfzqU1wXsWZxWyYNWqL5c6bvZ9ClmwkxVpJ9Tx+F2qkAV/8FjtRL8QKV+m
        4EPO1n4kX0J9LHkTvEv5ieAQVxp7rFP05l0OSDoCumXpi+IDhdsGY3suGocp/GBB4jkQn44sqtYrnA3G
        rIbilvFV0GQa1WFuYcVqsWdh9Z4O/bdgIixhG7UJy9jt0LvQRIj3bH995n/Y2QHxIUHiS92qYEL8KW8L
        lPOrbn2bD1FgcvwdkeXCAagb4jdEXVKM20GJSrCr6x88LED47VyYfgAAAABJRU5ErkJggg==
</value>
  </data>
</root>